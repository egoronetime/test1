import asyncio
from telethon import TelegramClient, events
from datetime import datetime, timedelta
from zoneinfo import ZoneInfo  # –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞

# –î–∞–Ω–Ω—ã–µ –¥–ª—è Telethon
api_id = 17131727
api_hash = '26d3f347b2c528f06f7ae1f10bbdb6f9'
channel_id = -1001993441703  # –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª ID
chat_id = -1002490325762  # ID –≥—Ä—É–ø–ø—ã –¥–ª—è –ª–æ–≥–æ–≤
topic_id = 595  # ID —Ç–æ–ø–∏–∫–∞ –¥–ª—è –ª–æ–≥–æ–≤

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º
client = TelegramClient('new_session_name', api_id, api_hash)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–æ–ø–∏–∫ Telegram
async def send_log_to_telegram(message):
    try:
        await client.send_message(chat_id, message, reply_to=topic_id, parse_mode='html')
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞ –≤ Telegram: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç–∞, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–Ω–æ 24 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
async def check_views():
    now = datetime.now(ZoneInfo("Europe/Moscow"))
    target_time = now - timedelta(hours=24)
    time_window_start = target_time - timedelta(hours=2)  # 22 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
    time_window_end = target_time + timedelta(hours=2)    # 26 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥

    closest_message = None
    closest_time_difference = timedelta.max

    # –ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–Ω–æ 24 —á–∞—Å–∞ –Ω–∞–∑–∞–¥, –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ offset_date
    async for message in client.iter_messages(channel_id, limit=100):  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏–º–∏—Ç –≤ 100 —Å–æ–æ–±—â–µ–Ω–∏–π
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
        if time_window_start <= message.date <= time_window_end:
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±–ª–∏–∑–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            time_difference = abs(message.date - target_time)
            if time_difference < closest_time_difference:
                closest_time_difference = time_difference
                closest_message = message

        # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª, –µ—Å–ª–∏ –¥–∞—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –Ω–∏–∂–Ω–∏–π –ø—Ä–µ–¥–µ–ª –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞
        if message.date < time_window_start:
            break

    # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
    if closest_message:
        views = closest_message.views
        cpm_base = views / 1000  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—ã—Å—è—á –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤

        # –†–∞—Å—á–µ—Ç—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫
        cpm_250 = cpm_base * 250
        cpm_300 = cpm_base * 300
        cpm_350 = cpm_base * 350

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏
        current_date_msk = datetime.now(ZoneInfo("Europe/Moscow"))
        formatted_current_date = current_date_msk.strftime("%Y-%m-%d %H:%M:%S")

        message_link = f"https://t.me/c/{str(channel_id)[4:]}/{closest_message.id}"
        log_message = (
            f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ—Å—Ç–∞ –∑–∞ 24 —á–∞—Å–∞:\n\n"
            f"üîó <a href=\"{message_link}\">–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç</a>\n"
            f"üëÅ {views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤\n\n"
            f"üíµ <b>–†–∞—Å—á–µ—Ç –ø–æ CPM</b>\n\n"
            f"‚Ä¢ 250 ‚Äî <code>{cpm_250:.2f}</code>\n"
            f"‚Ä¢ 300 ‚Äî <code>{cpm_300:.2f}</code>\n"
            f"‚Ä¢ 350 ‚Äî <code>{cpm_350:.2f}</code>\n\n"
            f"üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è (–ú–°–ö): <code>{formatted_current_date}</code>"
        )
        await send_log_to_telegram(log_message)
    else:
        # –ï—Å–ª–∏ –ø–æ—Å—Ç–æ–≤ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –æ–∫–Ω–µ –Ω–µ—Ç, —É–≤–µ–¥–æ–º–ª—è–µ–º –æ–± —ç—Ç–æ–º
        await send_log_to_telegram("‚ö†Ô∏è –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–Ω–æ 24 —á–∞—Å–∞ –Ω–∞–∑–∞–¥.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–ø—Ä–æ—Å–º–æ—Ç—Ä—ã"
@client.on(events.NewMessage(pattern=r'^–ø—Ä–æ—Å–º–æ—Ç—Ä—ã$', chats=chat_id))
async def handle_views_command(event):
    await check_views()

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∫–∞–∂–¥—É—é —á–∞—Å–æ–≤—É—é –æ—Ç–º–µ—Ç–∫—É
async def schedule_hourly_task():
    while True:
        await check_views()
        await asyncio.sleep(3600)  # –ó–∞–¥–µ—Ä–∂–∫–∞ 1 —á–∞—Å

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∑–∞–¥–∞—á
async def main():
    await client.start()
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    client.loop.create_task(schedule_hourly_task())
    await client.run_until_disconnected()

# –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
if __name__ == '__main__':
    asyncio.run(main())